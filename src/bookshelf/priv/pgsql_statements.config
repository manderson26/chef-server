%% -*- mode:erlang, erlang-indent-level: 4;indent-tabs-mode: nil -*-
{ping, <<"SELECT 'pong' AS ping LIMIT 1">>}.

%% Create bucket
%% bucket_name returns bucket_id
{insert_bucket, <<"INSERT INTO bucket_names (bucket_name) VALUES ($1)">>}.

{delete_bucket, <<"DELETE FROM bucket_names WHERE bucket_name = $1">>}.

{find_bucket, <<"SELECT bucket_name, bucket_id FROM bucket_names WHERE bucket_name = $1">>}.

{list_bucket, <<"SELECT bucket_name, file_name as file_names.name, created_at, data_id FROM"
                "(SELECT * FROM file_names INNER JOIN bucket_names ON file_names.bucket_id = bucket_names.bucket_id)"
                "WHERE bucket_name = $1">>}. %% This join needs rethinking; maybe bucket_name match goes inside

{list_buckets, <<"SELECT bucket_name FROM bucket_names ORDER BY bucket_name">>}.


%% Create file (returns data_id)
{insert_file,
 <<"SELECT create_file($1, $2)">>}. %% bucket, name returns id

%% Insert a chunk
{add_file_chunk,
 <<"INSERT INTO file_chunks (data_id, chunk, data) VALUES ($1, $2, $3)">>}.

%% Mark a data element done
{update_file_data_done,
 <<"UPDATE file_data SET complete = 'true', chunk_count = $1, hash_md5 = $2, hash_sha512 = $3">>}.

%% Get file information by name and bucket
{find_file,
 <<"SELECT file_names.data_id, complete, chunk_count, hash_md5, hash_sha512 FROM file_names"
   "INNER JOIN file_data ON file_names.data_id = file_data.data_id">>}.

%% Get chunk by id
{fetch_file_chunk_data,
 <<"SELECT data FROM file_chunks WHERE (data_id = $1 AND chunk = $2)">>}.
